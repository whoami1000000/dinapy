# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Check Version

on:
  push:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Checkout Submodules
        run: git submodule update --init --recursive

      - name: Read vcpkg.json
        id: json
        uses: ActionsTools/read-json-action@main
        with:
          file_path: '${{github.workspace}}/vcpkg.json'

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DTest=ON -DApp=ON

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Test
        working-directory: ${{github.workspace}}/build
        run: ctest -C ${{env.BUILD_TYPE}} --output-on-failure

      - name: Check Tag
        uses: mukunku/tag-exists-action@v1.4.0
        id: check_tag
        with:
          tag: 'v${{steps.json.outputs.version-string}}'

      - if: ${{ steps.check_tag.outputs.exists == 'false' }}
        name: Create Tag
        uses: rickstaa/action-create-tag@v1.6.4
        id: create_tag
        with:
          tag: 'v${{steps.json.outputs.version-string}}'

      - if: ${{ steps.check_tag.outputs.exists == 'false' }}
        name: Create Deb Package
        run: cd ${{github.workspace}}/build && cpack -G DEB

      - if: ${{ steps.check_tag.outputs.exists == 'false' }}
        name: Create Release
        uses: actions/create-release@latest
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: 'v${{steps.json.outputs.version-string}}'
          release_name: 'Release v${{steps.json.outputs.version-string}}'
          body: ''
          draft: false
          prerelease: false

      - if: ${{ steps.check_tag.outputs.exists == 'false' }}
        name: Upload Release Asset
        id: upload_release_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: '${{steps.create_release.outputs.upload_url}}'
          asset_path: '${{github.workspace}}/_packages/${{steps.json.outputs.name}}_${{steps.json.outputs.version-string}}_amd64.deb'
          asset_name: '${{steps.json.outputs.name}}_${{steps.json.outputs.version-string}}_amd64.deb'
          asset_content_type: application/octet-stream

      - if: ${{ steps.check_tag.outputs.exists == 'false' }}
        name: Telegram
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            Hi! ${{steps.json.outputs.name}} v${{steps.json.outputs.version-string}} has been released!
            See ${{steps.create_release.outputs.html_url}}

      - if: failure()
        name: Failure Step
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}
            [Repository=${{github.repository}}]
            [RepositoryURL=${{github.repositoryUrl}}]
            [Branch=${{github.ref}}]
            [Workflow=${{github.workflow}}]
            [Author=${{github.actor}}]
            [Commit=${{github.event.head_commit.message}}]
            [Status=${{job.status}}]